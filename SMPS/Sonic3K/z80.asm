; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2011 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: B3-432E-F558-21			    |
; |				Ilfak Guilfanov				    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	6AA009FE030B87A2227543EA36855B11
; Input	CRC32 :	A64B864D

; ---------------------------------------------------------------------------
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 1C00h Loaded length: 1C00h

; Processor	  : z80	[]
; Target assembler: Zilog Macro	Assembler

; ===========================================================================
; thanks to ValleyBell and LazloPsylus for helping to set up this correctly
; for both S&K and S3 drivers
; Segment type:	Pure code
	include "..\..\code/LANG Z80.ASM"

	org 0
	z80prog 0
DefaultMusicBank = 1h
SoundBank = 1h
SegaPCMBank = 2h
SegaPCMPtr = 0h

EntryPoint:
		di
		di
		im	1
		jp	loc_85
; ---------------------------------------------------------------------------
		db 0F2h

; =============== S U B	R O U T	I N E =======================================


sub_8:					; CODE XREF: sub_36D+9p sub_3C9+55p ...
		ld	hl, (off_15)
		ld	b, 0
		zadd	hl, bc
		ex	af, af
		ld	a, (hl)
		inc	hl
		ld	h, (hl)
		ld	l, a
		ex	af, af
		ret
; End of function sub_8

; ---------------------------------------------------------------------------
off_15:		dw off_1300		; DATA XREF: sub_8r
		db 0

; =============== S U B	R O U T	I N E =======================================


sub_18:					; CODE XREF: sub_277+36p sub_277+52p ...
		ld	c, a
		ld	b, 0
		zadd	hl, bc
		zadd	hl, bc
		znop

loc_1E:
		znop
		znop

loc_20:					; CODE XREF: sub_4FB+11Cp sub_4FB+214p ...
		ld	a, (hl)
		inc	hl
		ld	h, (hl)
		ld	l, a

locret_24:				; DATA XREF: sub_39E+15o
		ret
; End of function sub_18

; ---------------------------------------------------------------------------
byte_25:	dsb 13h, 0
; ---------------------------------------------------------------------------

VInt:
		di
		push	af
		push	iy
		exx

loc_3D:					; CODE XREF: ROM:0056j
		ld	a, r
		ld	(1C17h), a
		call	sub_11B
		ld	a, (1C02h)
		zor	a
		jr	z, loc_5D
		ld	a, (1C04h)
		zor	a
		jr	nz, loc_59
		ld	a, 5
		ld	(1C04h), a
		jp	loc_3D
; ---------------------------------------------------------------------------

loc_59:					; CODE XREF: ROM:004Fj
		dec	a
		ld	(1C04h), a

loc_5D:					; CODE XREF: ROM:0049j
		ld	a, (1C30h)
		zand	7Fh ; ''
		ld	c, a
		ld	b, 0
		ld	hl, DACbanks
		zadd	hl, bc
		ld	a, (hl)
		ld	hl, 6000h
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		xor	a
		ld	(hl), a
		exx
		pop	iy
		pop	af
		ld	b, 1
		ret
; ---------------------------------------------------------------------------

loc_85:					; CODE XREF: ROM:0004j
		ld	sp, 2000h
		ld	c, 0

loc_8A:					; CODE XREF: ROM:008Fj
		ld	b, 0

loc_8C:					; CODE XREF: ROM:loc_8Cj
		djnz	*
		dec	c
		jr	z, loc_8A
		call	sub_944
		ld	a, DefaultMusicBank
		ld	(1C3Eh), a
		xor	a
		ld	(1C27h), a
		ld	(1C30h), a
		ld	(1C3Fh), a

loc_A3:
		ld	(1C28h), a
		ld	a, 5
		ld	(1C04h), a
		ei
		jp	loc_108A

; =============== S U B	R O U T	I N E =======================================


sub_AF:					; CODE XREF: sub_22B+Fp sub_22B+15p ...

; FUNCTION CHUNK AT 00CB SIZE 00000002 BYTES

		bit	7, (ix+1)
		ret	nz
		bit	2, (ix+0)
		ret	nz
		zadd	a, (ix+1)
		bit	2, (ix+1)
		jr	nz, loc_CB
; End of function sub_AF


; =============== S U B	R O U T	I N E =======================================


sub_C2:					; CODE XREF: sub_22B+38p sub_22B+3Fp ...
		ld	(4000h), a
		znop
		ld	a, c
		ld	(4001h), a
		ret
; End of function sub_C2

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_AF

loc_CB:					; CODE XREF: sub_AF+11j
		zsub	4
; END OF FUNCTION CHUNK	FOR sub_AF

; =============== S U B	R O U T	I N E =======================================


sub_CD:					; CODE XREF: sub_7FF+1A6p
		ld	(4002h), a
		znop
		ld	a, c
		ld	(4003h), a
		ret
; End of function sub_CD

; ---------------------------------------------------------------------------
DACbanks:	dsb 1Ch, 2h		; S&K samples
		dsb 0Fh, 3h		; S3 samples
		dsb 07h, 4h		; S3 samples
		db 2h, 2h		; S&K samples
		dsb 11h, 4h		; S3 samples
; =============== S U B	R O U T	I N E =======================================


sub_11B:				; CODE XREF: ROM:0042p
		call	sub_7FF
		call	sub_19E

loc_121:				; CODE XREF: sub_19E+43j
		call	sub_9CC
		call	sub_879
		call	sub_8DF
		ld	a, (1C16h)
		cp	29h ; ')'
		jr	nz, loc_149
		ld	a, (1C0Ah)
		cp	2Ah ; '*'
		jr	z, loc_13C
		cp	32h ; '2'
		jr	c, loc_140

loc_13C:				; CODE XREF: sub_11B+1Bj
		xor	a
		ld	(1C0Ah), a

loc_140:				; CODE XREF: sub_11B+1Fj
		xor	a
		ld	(1C0Bh), a
		ld	(1C0Ch), a
		jr	loc_168
; ---------------------------------------------------------------------------

loc_149:				; CODE XREF: sub_11B+14j
		ld	a, (1C16h)
		cp	0FFh
		jr	z, loc_168
		ld	hl, 1C0Ah
		ld	e, (hl)
		inc	hl
		ld	d, (hl)
		inc	hl
		ld	a, (hl)
		zor	d
		zor	e
		jr	z, loc_168
		call	sub_9E2
		call	loc_4E2
		call	loc_4E2
		call	loc_4E2

loc_168:				; CODE XREF: sub_11B+2Cj sub_11B+33j ...
		ld	a, (1C3Eh)
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		xor	a
		ld	(1C19h), a
		ld	a, (1C16h)
		cp	0FFh
		call	z, sub_A20
		ld	ix, 1C40h
		bit	7, (ix+0)
		call	nz, sub_B98
		ld	b, 8
		ld	ix, 1C70h
		jr	loc_1BF
; End of function sub_11B


; =============== S U B	R O U T	I N E =======================================


sub_19E:				; CODE XREF: sub_11B+3p
		ld	a, 1
		ld	(1C19h), a
		ld	a, SoundBank
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	ix, 1DF0h
		ld	b, 7

loc_1BF:				; CODE XREF: sub_11B+81j sub_19E+2Fj
		push	bc
		bit	7, (ix+0)
		call	nz, sub_1E9
		ld	de, 30h	; '0'
		zadd	ix, de
		pop	bc
		djnz	loc_1BF
		ld	a, (1C08h)
		zor	a
		ret	z
		ld	a, (1C2Fh)
		zor	a
		jp	nz, loc_1E4
		ld	a, (1C08h)
		ld	(1C2Fh), a
		jp	loc_121
; ---------------------------------------------------------------------------

loc_1E4:				; CODE XREF: sub_19E+3Aj
		dec	a
		ld	(1C2Fh), a
		ret
; End of function sub_19E


; =============== S U B	R O U T	I N E =======================================


sub_1E9:				; CODE XREF: sub_19E+26p

; FUNCTION CHUNK AT 0342 SIZE 00000019 BYTES
; FUNCTION CHUNK AT 0FC4 SIZE 00000073 BYTES

		bit	7, (ix+1)
		jp	nz, loc_FC4
		call	sub_33A
		jr	nz, loc_20C
		call	sub_277
		bit	4, (ix+0)
		ret	nz
		call	sub_39E
		call	sub_46F
		call	sub_3C9
		call	sub_22B
		jp	loc_342
; ---------------------------------------------------------------------------

loc_20C:				; CODE XREF: sub_1E9+Aj
		bit	4, (ix+0)
		ret	nz
		call	sub_36D
		ld	a, (ix+1Eh)
		zor	a
		jr	z, loc_220
		dec	(ix+1Eh)
		jp	z, sub_35B

loc_220:				; CODE XREF: sub_1E9+2Fj
		call	sub_46F
		bit	6, (ix+0)
		ret	nz
		call	sub_3C9
; End of function sub_1E9


; =============== S U B	R O U T	I N E =======================================


sub_22B:				; CODE XREF: sub_1E9+1Dp
		bit	2, (ix+0)
		ret	nz
		bit	0, (ix+0)
		jp	nz, loc_244

loc_237:				; CODE XREF: sub_22B+1Ej
		ld	a, 0A4h	; '¤'
		ld	c, h
		call	sub_AF
		ld	a, 0A0h	; ' '
		ld	c, l
		call	sub_AF
		ret
; ---------------------------------------------------------------------------

loc_244:				; CODE XREF: sub_22B+9j
		ld	a, (ix+1)
		cp	2
		jr	nz, loc_237
		ld	b, 4
		ld	hl, byte_272

loc_250:				; CODE XREF: sub_22B+44j
		push	bc
		ld	a, (hl)
		inc	hl
		push	hl
		ex	de, hl
		ld	c, (hl)
		inc	hl
		ld	b, (hl)
		inc	hl
		ex	de, hl
		ld	l, (ix+0Dh)
		ld	h, (ix+0Eh)
		zadd	hl, bc
		push	af
		ld	c, h
		call	sub_C2
		pop	af
		zsub	4
		ld	c, l
		call	sub_C2
		pop	hl
		pop	bc
		djnz	loc_250
		ret
; End of function sub_22B

; ---------------------------------------------------------------------------
byte_272:	db 0ADh, 0AEh, 0ACh, 0A6h ; DATA XREF: sub_22B+22o

; ---------------------------------------------------------------------------
nullsub_1:                              ; CODE XREF: ROM:0EF4p
                 ret

; =============== S U B	R O U T	I N E =======================================


sub_277:				; CODE XREF: sub_1E9+Cp sub_1E9+DE0p
		ld	e, (ix+3)
		ld	d, (ix+4)
		res	1, (ix+0)
		res	4, (ix+0)

loc_285:				; CODE XREF: ROM:0BFAj
		ld	a, (de)
		inc	de
		cp	0E0h ; 'à'
		jp	nc, loc_BED
		ex	af, af
		call	sub_35B
		ex	af, af
		bit	3, (ix+0)
		jp	nz, loc_2E8
		zor	a
		jp	p, loc_308
		zsub	81h ; ''
		jp	p, loc_2A6
		call	sub_106C
		jr	loc_2D4
; ---------------------------------------------------------------------------

loc_2A6:				; CODE XREF: sub_277+27j
		zadd	a, (ix+5)
		ld	hl, word_AA5
		push	af
		rst	18h
		pop	af
		bit	7, (ix+1)
		jr	nz, loc_2CE
		push	de
		ld	d, 8
		ld	e, 0Ch
		ex	af, af
		xor	a

loc_2BC:				; CODE XREF: sub_277+4Bj
		ex	af, af
		zsub	e
		jr	c, loc_2C5
		ex	af, af
		zadd	a, d
		jr	loc_2BC
; ---------------------------------------------------------------------------
		ex	af, af

loc_2C5:				; CODE XREF: sub_277+47j
		zadd	a, e
		ld	hl, word_B4D
		rst	18h
		ex	af, af
		zor	h
		ld	h, a
		pop	de

loc_2CE:				; CODE XREF: sub_277+3Cj
		ld	(ix+0Dh), l
		ld	(ix+0Eh), h

loc_2D4:				; CODE XREF: sub_277+2Dj
		ld	a, (de)
		zor	a
		jp	p, loc_307
		ld	a, (ix+0Ch)
		ld	(ix+0Bh), a
		jr	loc_30E
; ---------------------------------------------------------------------------
		ld	a, (de)
		inc	de
		ld	(ix+11h), a
		jr	loc_306
; ---------------------------------------------------------------------------

loc_2E8:				; CODE XREF: sub_277+1Ej
		ld	h, a
		ld	a, (de)
		inc	de
		ld	l, a
		zor	h
		jr	z, loc_2FB
		ld	a, (ix+5)
		ld	b, 0
		zor	a
		jp	p, loc_2F9
		dec	b

loc_2F9:				; CODE XREF: sub_277+7Ej
		ld	c, a
		zadd	hl, bc

loc_2FB:				; CODE XREF: sub_277+76j
		ld	(ix+0Dh), l
		ld	(ix+0Eh), h
		ld	a, (de)
		inc	de
		ld	(ix+11h), a

loc_306:				; CODE XREF: sub_277+6Fj
		ld	a, (de)

loc_307:				; CODE XREF: sub_277+5Fj
		inc	de

loc_308:				; CODE XREF: sub_277+22j sub_B98+3Ej
		call	sub_330
		ld	(ix+0Ch), a

loc_30E:				; CODE XREF: sub_277+68j sub_B98+48j
		ld	(ix+3),	e
		ld	(ix+4),	d
		ld	a, (ix+0Ch)
		ld	(ix+0Bh), a
		bit	1, (ix+0)
		ret	nz
		xor	a
		ld	(ix+25h), a
		ld	(ix+22h), a
		ld	(ix+17h), a
		ld	a, (ix+1Fh)
		ld	(ix+1Eh), a
		ret
; End of function sub_277


; =============== S U B	R O U T	I N E =======================================


sub_330:				; CODE XREF: sub_277:loc_308p
					; ROM:loc_CE1p
		ld	b, (ix+2)
		dec	b
		ret	z
		ld	c, a

loc_336:				; CODE XREF: sub_330+7j
		zadd	a, c
		djnz	loc_336
		ret
; End of function sub_330


; =============== S U B	R O U T	I N E =======================================


sub_33A:				; CODE XREF: sub_1E9+7p sub_B98p ...
		ld	a, (ix+0Bh)
		dec	a
		ld	(ix+0Bh), a
		ret
; End of function sub_33A

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1E9

loc_342:				; CODE XREF: sub_1E9+20j
		ld	a, (ix+0Dh)
		zor	(ix+0Eh)
		ret	z
		ld	a, (ix+0)
		zand	6
		ret	nz
		ld	a, (ix+1)
		zor	0F0h ; 'ð'
		ld	c, a
		ld	a, 28h ; '('
		call	sub_C2
		ret
; END OF FUNCTION CHUNK	FOR sub_1E9

; =============== S U B	R O U T	I N E =======================================


sub_35B:				; CODE XREF: sub_1E9+34j sub_277+16p ...
		ld	a, (ix+0)
		zand	6
		ret	nz

loc_361:				; CODE XREF: ROM:0F58p
		ld	c, (ix+1)
		bit	7, c
		ret	nz
; End of function sub_35B

; START	OF FUNCTION CHUNK FOR sub_9F6

loc_367:				; CODE XREF: sub_9F6+Dj
		ld	a, 28h ; '('
		call	sub_C2
		ret
; END OF FUNCTION CHUNK	FOR sub_9F6

; =============== S U B	R O U T	I N E =======================================


sub_36D:				; CODE XREF: sub_1E9+28p
		ld	a, (ix+18h)
		zor	a
		ret	z
		ret	m
		dec	a
		ld	c, 0Ah
		rst	sub_8
		rst	sub_18
		call	sub_103A
		ld	h, (ix+1Dh)
		ld	l, (ix+1Ch)
		ld	de, byte_4B1
		ld	b, 4
		ld	c, (ix+19h)

loc_389:				; CODE XREF: sub_36D+2Ej
		push	af
		sra	c
		push	bc
		jr	nc, loc_397
		zadd	a, (hl)
		zand	7Fh ; ''
		ld	c, a
		ld	a, (de)
		call	sub_AF

loc_397:				; CODE XREF: sub_36D+20j
		pop	bc
		inc	de
		inc	hl
		pop	af
		djnz	loc_389
		ret
; End of function sub_36D


; =============== S U B	R O U T	I N E =======================================


sub_39E:				; CODE XREF: sub_1E9+14p sub_1E9+DE8p
		bit	7, (ix+7)
		ret	z
		bit	1, (ix+0)
		ret	nz
		ld	e, (ix+20h)
		ld	d, (ix+21h)
		push	ix
		pop	hl
		ld	b, 0
		ld	c, locret_24
		zadd	hl, bc
		ex	de, hl
		ldi
		ldi
		ldi
		ld	a, (hl)
		srl	a
		ld	(de), a
		xor	a
		ld	(ix+22h), a
		ld	(ix+23h), a
		ret
; End of function sub_39E


; =============== S U B	R O U T	I N E =======================================


sub_3C9:				; CODE XREF: sub_1E9+1Ap sub_1E9+3Fp ...
		ld	a, (ix+7)
		zor	a
		ret	z
		cp	80h ; '€'
		jr	nz, loc_41A
		dec	(ix+24h)
		ret	nz
		inc	(ix+24h)
		push	hl
		ld	l, (ix+22h)
		ld	h, (ix+23h)
		ld	e, (ix+20h)
		ld	d, (ix+21h)
		push	de
		pop	iy
		dec	(ix+25h)
		jr	nz, loc_405
		ld	a, (iy+1)
		ld	(ix+25h), a
		ld	a, (ix+26h)
		ld	c, a
		zand	80h ; '€'
		rlca
		zneg
		ld	b, a
		zadd	hl, bc
		ld	(ix+22h), l
		ld	(ix+23h), h

loc_405:				; CODE XREF: sub_3C9+23j
		pop	bc
		zadd	hl, bc
		dec	(ix+27h)
		ret	nz
		ld	a, (iy+3)
		ld	(ix+27h), a
		ld	a, (ix+26h)
		zneg
		ld	(ix+26h), a
		ret
; ---------------------------------------------------------------------------

loc_41A:				; CODE XREF: sub_3C9+7j
		dec	a
		ex	de, hl
		ld	c, 8
		rst	sub_8
		rst	sub_18
		jr	loc_425
; ---------------------------------------------------------------------------

loc_422:				; CODE XREF: sub_3C9+82j sub_3C9+85j
		ld	(ix+25h), a

loc_425:				; CODE XREF: sub_3C9+57j sub_3C9+95j
		push	hl
		ld	c, (ix+25h)
		ld	b, 0
		zadd	hl, bc
		ld	a, (hl)
		pop	hl
		bit	7, a
		jp	z, loc_460
		cp	82h ; '‚'
		jr	z, loc_449
		cp	80h ; '€'
		jr	z, loc_44D
		cp	84h ; '„'
		jr	z, loc_450
		ld	h, 0FFh
		jr	nc, loc_462
		zset	6, (ix+0)
		pop	hl
		ret
; ---------------------------------------------------------------------------

loc_449:				; CODE XREF: sub_3C9+6Cj
		inc	bc
		ld	a, (bc)
		jr	loc_422
; ---------------------------------------------------------------------------

loc_44D:				; CODE XREF: sub_3C9+70j
		xor	a
		jr	loc_422
; ---------------------------------------------------------------------------

loc_450:				; CODE XREF: sub_3C9+74j
		inc	bc
		ld	a, (bc)
		zadd	a, (ix+22h)
		ld	(ix+22h), a
		inc	(ix+25h)
		inc	(ix+25h)
		jr	loc_425
; ---------------------------------------------------------------------------

loc_460:				; CODE XREF: sub_3C9+67j
		ld	h, 0

loc_462:				; CODE XREF: sub_3C9+78j
		ld	l, a
		ld	b, (ix+22h)
		inc	b
		ex	de, hl

loc_468:				; CODE XREF: sub_3C9+A0j
		zadd	hl, de
		djnz	loc_468
		inc	(ix+25h)
		ret
; End of function sub_3C9


; =============== S U B	R O U T	I N E =======================================


sub_46F:				; CODE XREF: sub_1E9+17p
					; sub_1E9:loc_220p ...
		ld	h, (ix+0Eh)
		ld	l, (ix+0Dh)
		ld	b, 0
		ld	a, (ix+10h)
		zor	a
		jp	p, loc_480
		ld	b, 0FFh

loc_480:				; CODE XREF: sub_46F+Cj
		ld	c, a
		zadd	hl, bc
		ret
; End of function sub_46F


; =============== S U B	R O U T	I N E =======================================


sub_483:				; CODE XREF: sub_A20+69p sub_D44+18p
		ld	hl, (1C37h)
		ld	a, (1C19h)
		zor	a
		jr	z, loc_492
		ld	l, (ix+2Ah)
		ld	h, (ix+2Bh)

loc_492:				; CODE XREF: sub_483+7j sub_D44+11p ...
		xor	a
		zor	b
		ret	z
		ld	de, 19h

loc_498:				; CODE XREF: sub_483+16j
		zadd	hl, de
		djnz	loc_498
		ret
; End of function sub_483

; ---------------------------------------------------------------------------
byte_49C:	db 0B0h, 30h, 38h, 34h,	3Ch, 50h, 58h, 54h, 5Ch, 60h, 68h
					; DATA XREF: sub_4B9o
		db 64h,	6Ch, 70h, 78h, 74h, 7Ch, 80h, 88h, 84h,	8Ch
byte_4B1:	db 40h,	48h, 44h, 4Ch	; DATA XREF: sub_36D+14o sub_CBA+1o
byte_4B5:	db 90h,	98h, 94h, 9Ch	; DATA XREF: sub_FA4o

; =============== S U B	R O U T	I N E =======================================


sub_4B9:				; CODE XREF: sub_A20+6Cp
					; sub_D44:loc_D5Fp ...
		ld	de, byte_49C
		ld	c, (ix+0Ah)
		ld	a, 0B4h	; '´'
		call	sub_AF
		call	sub_4DA
		ld	(ix+1Bh), a
		ld	b, 14h

loc_4CC:				; CODE XREF: sub_4B9+16j
		call	sub_4DA
		djnz	loc_4CC
		ld	(ix+1Ch), l
		ld	(ix+1Dh), h
		jp	sub_CBA
; End of function sub_4B9


; =============== S U B	R O U T	I N E =======================================


sub_4DA:				; CODE XREF: sub_4B9+Bp
					; sub_4B9:loc_4CCp
		ld	a, (de)
		inc	de
		ld	c, (hl)
		inc	hl
		call	sub_AF
		ret
; End of function sub_4DA

; ---------------------------------------------------------------------------

loc_4E2:				; CODE XREF: sub_11B+44p sub_11B+47p ...
		ld	a, (1C05h)
		ld	(1C09h), a
		ld	a, (1C06h)
		ld	(1C05h), a
		ld	a, (1C07h)
		ld	(1C06h), a
		xor	a
		ld	(1C07h), a
		ld	a, (1C09h)

; =============== S U B	R O U T	I N E =======================================


sub_4FB:				; CODE XREF: ROM:0F3Cp

; FUNCTION CHUNK AT 0552 SIZE 0000013E BYTES
; FUNCTION CHUNK AT 06A9 SIZE 000000E6 BYTES
; FUNCTION CHUNK AT 0A16 SIZE 0000000A BYTES

		cp	0DCh ; 'Ü'
		jp	z, loc_552
		cp	0FFh
		jp	z, loc_A16
		cp	33h ; '3'
		jp	c, loc_558
		cp	0E0h ; 'à'
		jp	c, loc_6A9
		cp	0E1h ; 'á'
		jp	c, sub_944
		cp	0E6h ; 'æ'
		jp	nc, sub_944
		zsub	0E1h ; 'á'
		ld	hl, off_524
		rst	sub_18
		xor	a
		ld	(1C18h), a
		jp	(hl)
; End of function sub_4FB

; ---------------------------------------------------------------------------
off_524:	dw loc_85C, sub_944, sub_9BC, loc_52E, loc_85C ; DATA XREF: sub_4FB+20o
; ---------------------------------------------------------------------------

loc_52E:				; DATA XREF: ROM:off_524o
		ld	ix, 1DF0h
		ld	b, 7
		ld	a, 1
		ld	(1C19h), a

loc_539:				; CODE XREF: ROM:0547j
		push	bc
		bit	7, (ix+0)
		call	nz, sub_54D
		ld	de, 30h	; '0'
		zadd	ix, de
		pop	bc
		djnz	loc_539
		call	sub_690
		ret

; =============== S U B	R O U T	I N E =======================================


sub_54D:				; CODE XREF: ROM:053Ep

; FUNCTION CHUNK AT 0C7F SIZE 00000006 BYTES
; FUNCTION CHUNK AT 0D87 SIZE 000000B2 BYTES

		push	hl
		push	hl
		jp	loc_C7F
; End of function sub_54D

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_4FB

loc_552:				; CODE XREF: sub_4FB+2j
		ld	a, 32h ; '2'
		push	af
		jp	loc_5DB
; ---------------------------------------------------------------------------

loc_558:				; CODE XREF: sub_4FB+Cj
		zsub	1
		ret	m
		push	af
		cp	29h ; ')'
		jp	nz, loc_5DB
		ld	a, (1C29h)
		zor	a
		jp	z, loc_580
		xor	a
		ld	(1C0Ah), a
		ld	(1C0Bh), a
		ld	(1C0Ch), a
		ld	(1C05h), a

loc_575:
		ld	(1C06h), a
		ld	(1C07h), a
		ld	(1C09h), a
		pop	af
		ret
; ---------------------------------------------------------------------------

loc_580:				; CODE XREF: sub_4FB+6Aj
		ld	a, (1C16h)
		cp	29h ; ')'
		jp	z, loc_5DE
		xor	a
		ld	(1C0Ah), a
		ld	(1C0Bh), a
		ld	(1C0Ch), a
		ld	(1C05h), a
		ld	(1C06h), a
		ld	(1C07h), a
		ld	a, (1C3Eh)
		ld	(1C2Dh), a
		ld	a, (1C08h)
		ld	(1C2Eh), a
		xor	a
		ld	(1C08h), a
		ld	hl, 1C40h
		ld	de, 1DF0h
		ld	bc, 1B0h
		ldir
		ld	hl, 1DF0h
		ld	de, 30h	; '0'
		ld	b, 9

loc_5BE:				; CODE XREF: sub_4FB+CAj
		ld	a, (hl)
		zand	7Fh ; ''
		zset	2, (hl)
		ld	(hl), a
		zadd	hl, de
		djnz	loc_5BE
		ld	a, 29h ; ')'
		ld	(1C16h), a
		ld	a, (1C24h)
		ld	(1C2Ch), a
		ld	hl, (1C37h)
		ld	(1C2Ah), hl
		jp	loc_5DE
; ---------------------------------------------------------------------------

loc_5DB:				; CODE XREF: sub_4FB+5Aj sub_4FB+63j
		call	sub_944

loc_5DE:				; CODE XREF: sub_4FB+8Aj sub_4FB+DDj
		pop	af
		push	af
		ld	hl, MusicBanks
		zadd	a, l
		ld	l, a
		adc	a, h
		zsub	l
		ld	h, a
		ld	(loc_5EB+1), hl

loc_5EB:				; DATA XREF: sub_4FB+EDw
		ld	a, (MusicBanks)
		ld	(1C3Eh), a
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	a, 0B6h	; '¶'
		ld	(4002h), a
		znop
		ld	a, 0C0h	; 'À'
		ld	(4003h), a
		pop	af
		ld	c, 4
		rst	sub_8
		rst	sub_18
		push	hl
		push	hl
		rst	loc_20
		ld	(1C37h), hl
		pop	hl
		pop	iy
		ld	a, (iy+5)
		ld	(1C13h), a
		ld	(1C24h), a
		ld	de, 6
		zadd	hl, de
		ld	(1C33h), hl
		ld	hl, 695h
		ld	(1C35h), hl
		ld	de, 1C40h
		ld	b, (iy+2)
		ld	a, (iy+4)

loc_63D:				; CODE XREF: sub_4FB+161j
		push	bc
		ld	hl, (1C35h)
		ldi
		ldi
		ld	(de), a
		inc	de
		ld	(1C35h), hl
		ld	hl, (1C33h)
		ldi
		ldi
		ldi
		ldi
		ld	(1C33h), hl
		call	sub_7C5
		pop	bc
		djnz	loc_63D
		ld	a, (iy+3)
		zor	a
		jp	z, sub_690
		ld	b, a
		ld	hl, byte_6A3
		ld	(1C35h), hl
		ld	de, 1D60h
		ld	a, (iy+4)

loc_672:				; CODE XREF: sub_4FB+193j
		push	bc
		ld	hl, (1C35h)
		ldi
		ldi
		ld	(de), a
		inc	de
		ld	(1C35h), hl
		ld	hl, (1C33h)
		ld	bc, 6
		ldir
		ld	(1C33h), hl
		call	loc_7CC
		pop	bc
		djnz	loc_672
; END OF FUNCTION CHUNK	FOR sub_4FB

; =============== S U B	R O U T	I N E =======================================


sub_690:				; CODE XREF: ROM:0549p	sub_4FB+167j ...
		xor	a
		ld	(1C09h), a
		ret
; End of function sub_690

; ---------------------------------------------------------------------------
byte_695:	db 80h,	6		; DATA XREF: sub_944+11o
		db 80h,	0
		db 80h,	1
		db 80h,	2
		db 80h,	4
		db 80h,	5
		db 80h,	6
byte_6A3:	db 80h,	80h		; DATA XREF: sub_4FB+16Bo
		db 80h,	0A0h
		db 80h,	0C0h
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_4FB

loc_6A9:				; CODE XREF: sub_4FB+11j
		zsub	33h ; '3'
		zor	a
		jp	nz, loc_6B7
		ld	a, (1C28h)
		xor	1
		ld	(1C28h), a

loc_6B7:				; CODE XREF: sub_4FB+1B1j
		ex	af, af
		ld	a, SoundBank
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		xor	a
		ld	c, 6
		ld	(1C19h), a
		ex	af, af
		cp	78h ; 'x'
		jp	z, loc_70C
		cp	89h ; '‰'
		jp	c, loc_706
		push	af
		ld	b, a
		ld	a, (1C25h)
		zsub	b
		jp	nz, loc_6FB
		ld	a, 80h ; '€'
		ld	(1C26h), a
		rst	sub_8
		pop	af
		ld	c, a
		rst	sub_18
		inc	hl
		inc	hl
		inc	hl
		ld	a, (hl)
		ld	(1C31h), a
		jp	sub_690
; ---------------------------------------------------------------------------

loc_6FB:				; CODE XREF: sub_4FB+1EAj
		xor	a
		ld	(1C26h), a
		pop	af
		ld	(1C25h), a
		jp	loc_70C
; ---------------------------------------------------------------------------

loc_706:				; CODE XREF: sub_4FB+1E1j
		push	af
		xor	a
		ld	(1C27h), a
		pop	af

loc_70C:				; CODE XREF: sub_4FB+1DCj sub_4FB+208j
		rst	sub_8
		rst	sub_18
		push	hl
		rst	loc_20
		ld	(1C39h), hl
		xor	a
		ld	(1C15h), a
		pop	hl
		push	hl
		pop	iy
		ld	a, (iy+2)
		ld	(1C3Bh), a
		ld	de, 4
		zadd	hl, de
		ld	b, (iy+3)
		ld	a, b
		ld	(1C31h), a

loc_72C:				; CODE XREF: sub_4FB+28Fj
		push	bc
		push	hl
		inc	hl
		ld	c, (hl)
		call	sub_78F
		zset	2, (hl)
		push	ix
		ld	a, (1C19h)
		zor	a
		jr	z, loc_740
		pop	hl
		push	iy

loc_740:				; CODE XREF: sub_4FB+240j
		pop	de
		pop	hl
		ldi
		ld	a, (de)
		cp	2
		call	z, loc_979
		ldi
		ld	a, (1C3Bh)
		ld	(de), a
		inc	de
		ldi
		ldi
		ldi
		ldi
		call	sub_7C5
		bit	7, (ix+0)
		jr	z, loc_76E
		ld	a, (ix+1)
		cp	(iy+1)
		jr	nz, loc_76E
		zset	2, (iy+0)

loc_76E:				; CODE XREF: sub_4FB+265j sub_4FB+26Dj
		push	hl
		ld	hl, (1C39h)
		ld	a, (1C19h)
		zor	a
		jr	z, loc_77C
		push	iy
		pop	ix

loc_77C:				; CODE XREF: sub_4FB+27Bj
		ld	(ix+2Ah), l
		ld	(ix+2Bh), h
		call	sub_35B
		call	sub_986
		pop	hl
		pop	bc
		djnz	loc_72C
		jp	sub_690
; END OF FUNCTION CHUNK	FOR sub_4FB

; =============== S U B	R O U T	I N E =======================================


sub_78F:				; CODE XREF: sub_4FB+235p sub_54D+84Bp
		bit	7, c
		jr	nz, loc_79B
		ld	a, c
		bit	2, a
		jr	z, loc_7B2
		dec	a
		jr	loc_7B2
; ---------------------------------------------------------------------------

loc_79B:				; CODE XREF: sub_78F+2j
		ld	a, 1Fh
		call	sub_1075
		ld	a, 0FFh
		ld	(7F11h), a
		ld	a, c
		srl	a
		srl	a
		srl	a
		srl	a
		srl	a
		zadd	a, 2

loc_7B2:				; CODE XREF: sub_78F+7j sub_78F+Aj
		zsub	2
		ld	(1C32h), a
		push	af
		ld	hl, word_7DF
		rst	sub_18
		push	hl
		pop	ix
		pop	af
		ld	hl, word_7EF
		rst	sub_18
		ret
; End of function sub_78F


; =============== S U B	R O U T	I N E =======================================


sub_7C5:				; CODE XREF: sub_4FB+15Dp sub_4FB+25Ep
		ex	af, af
		xor	a
		ld	(de), a
		inc	de
		ld	(de), a
		inc	de
		ex	af, af

loc_7CC:				; CODE XREF: sub_4FB+18Fp
		ex	de, hl
		ld	(hl), 30h ; '0'
		inc	hl
		ld	(hl), 0C0h ; 'À'
		inc	hl
		ld	(hl), 1
		ld	b, 24h ; '$'

loc_7D7:				; CODE XREF: sub_7C5+15j
		inc	hl
		ld	(hl), 0
		djnz	loc_7D7
		inc	hl
		ex	de, hl
		ret
; End of function sub_7C5

; ---------------------------------------------------------------------------
word_7DF:	dw 1DF0h, 1E20h, 1E50h,	1E80h, 1EB0h, 1EE0h, 1F10h, 1F10h
					; DATA XREF: sub_78F+29o
word_7EF:	dw 1CD0h, 1D00h, 1D30h,	1C40h, 1D60h, 1D90h, 1DC0h, 1DC0h
					; DATA XREF: sub_78F+31o

; =============== S U B	R O U T	I N E =======================================


sub_7FF:				; CODE XREF: sub_11Bp

; FUNCTION CHUNK AT 098D SIZE 0000002F BYTES

		ld	hl, 1C10h
		ld	a, (hl)
		zor	a
		ret	z
		jp	m, loc_810
		pop	de
		dec	a
		ret	nz
		ld	(hl), 2
		jp	loc_98D
; ---------------------------------------------------------------------------

loc_810:				; CODE XREF: sub_7FF+6j
		xor	a
		ld	(hl), a
		ld	a, (1C0Dh)
		zor	a
		jp	nz, sub_944
		ld	ix, 1C70h
		ld	b, 6

loc_81F:				; CODE XREF: sub_7FF+39j
		ld	a, (1C11h)
		zor	a
		jr	nz, loc_82B
		bit	7, (ix+0)
		jr	z, loc_833

loc_82B:				; CODE XREF: sub_7FF+24j
		ld	c, (ix+0Ah)
		ld	a, 0B4h	; '´'
		call	sub_AF

loc_833:				; CODE XREF: sub_7FF+2Aj
		ld	de, 30h	; '0'
		zadd	ix, de
		djnz	loc_81F
		ld	ix, 1F40h
		ld	b, 7

loc_840:				; CODE XREF: sub_7FF+5Aj
		bit	7, (ix+0)
		jr	z, loc_854
		bit	7, (ix+1)
		jr	nz, loc_854
		ld	c, (ix+0Ah)
		ld	a, 0B4h	; '´'
		call	sub_AF

loc_854:				; CODE XREF: sub_7FF+45j sub_7FF+4Bj
		ld	de, 30h	; '0'
		zadd	ix, de
		djnz	loc_840
		ret
; End of function sub_7FF

; ---------------------------------------------------------------------------

loc_85C:				; DATA XREF: ROM:off_524o
		ld	a, 28h ; '('
		ld	(1C0Dh), a
		ld	a, 6
		ld	(1C0Fh), a
		ld	(1C0Eh), a

; =============== S U B	R O U T	I N E =======================================


sub_869:				; CODE XREF: sub_879+6p
		xor	a
		ld	(1C40h), a
		ld	(1DC0h), a
		ld	(1D60h), a
		ld	(1D90h), a
		jp	sub_9BC
; End of function sub_869


; =============== S U B	R O U T	I N E =======================================


sub_879:				; CODE XREF: sub_11B+9p
		ld	hl, 1C0Dh
		ld	a, (hl)
		zor	a
		ret	z
		call	m, sub_869
		res	7, (hl)
		ld	a, (1C0Fh)
		dec	a
		jr	z, loc_88E
		ld	(1C0Fh), a
		ret
; ---------------------------------------------------------------------------

loc_88E:				; CODE XREF: sub_879+Fj
		ld	a, (1C0Eh)
		ld	(1C0Fh), a
		ld	a, (1C0Dh)
		dec	a
		ld	(1C0Dh), a
		jp	z, sub_944
		ld	a, (1C3Eh)
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	ix, 1C40h
		ld	b, 6

loc_8BB:				; CODE XREF: sub_879+63j
		inc	(ix+6)
		jp	p, loc_8C6
		dec	(ix+6)
		jr	loc_8D7
; ---------------------------------------------------------------------------

loc_8C6:				; CODE XREF: sub_879+45j
		bit	7, (ix+0)
		jr	z, loc_8D7
		bit	2, (ix+0)
		jr	nz, loc_8D7
		push	bc
		call	sub_CBA
		pop	bc

loc_8D7:				; CODE XREF: sub_879+4Bj sub_879+51j ...
		ld	de, 30h	; '0'
		zadd	ix, de
		djnz	loc_8BB
		ret
; End of function sub_879


; =============== S U B	R O U T	I N E =======================================


sub_8DF:				; CODE XREF: sub_11B+Cp
		ld	a, (1C29h)
		zor	a
		ret	z
		ld	a, (1C3Eh)
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	a, (1C0Eh)
		dec	a
		ld	(1C0Eh), a
		ret	nz
		ld	a, (1C0Fh)
		ld	(1C0Eh), a
		ld	b, 5
		ld	ix, 1C70h
		ld	de, 30h	; '0'

loc_912:				; CODE XREF: sub_8DF+41j
		ld	a, (ix+6)
		dec	a
		ld	(ix+6),	a
		push	bc
		call	sub_CBA
		pop	bc
		zadd	ix, de
		djnz	loc_912
		ld	a, (1C29h)
		dec	a
		ld	(1C29h), a
		ret	nz
		ld	b, 3
		ld	ix, 1D60h
		ld	de, 30h	; '0'

loc_933:				; CODE XREF: sub_8DF+5Aj
		res	2, (ix+0)
		zadd	ix, de
		djnz	loc_933
		ld	ix, 1C40h
		res	2, (ix+0)
		ret
; End of function sub_8DF


; =============== S U B	R O U T	I N E =======================================


sub_944:				; CODE XREF: ROM:0091p	sub_4FB+16j ...
		ld	hl, 1C0Dh
		ld	de, 1C0Eh
		ld	bc, 3C6h
		ld	(hl), 0
		ldir
		xor	a
		ld	(1C08h), a
		ld	ix, byte_695
		ld	b, 6

loc_95B:				; CODE XREF: sub_944+23j
		push	bc
		call	sub_9F6
		call	sub_986
		inc	ix
		inc	ix
		pop	bc
		djnz	loc_95B
		ld	b, 7
		xor	a
		ld	(1C0Dh), a
		call	sub_9BC
		ld	c, 0
		ld	a, 2Bh ; '+'
		call	sub_C2

loc_979:				; CODE XREF: sub_4FB+24Cp sub_B98+28p
		xor	a
		ld	(1C12h), a
		ld	c, a
		ld	a, 27h ; '''
		call	sub_C2
		jp	sub_690
; End of function sub_944


; =============== S U B	R O U T	I N E =======================================


sub_986:				; CODE XREF: sub_4FB+28Ap sub_944+1Bp
		ld	a, 90h ; ''
		ld	c, 0
		jp	sub_A0A
; End of function sub_986

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_7FF

loc_98D:				; CODE XREF: sub_7FF+Ej
		call	sub_9BC
		push	bc
		push	af
		ld	b, 3
		ld	a, 0B4h	; '´'
		ld	c, 0

loc_998:				; CODE XREF: sub_7FF+19Fj
		push	af
		call	sub_C2
		pop	af
		inc	a
		djnz	loc_998
		ld	b, 2
		ld	a, 0B4h	; '´'

loc_9A4:				; CODE XREF: sub_7FF+1ABj
		push	af
		call	sub_CD
		pop	af
		inc	a
		djnz	loc_9A4
		ld	c, 0
		ld	b, 6
		ld	a, 28h ; '('

loc_9B2:				; CODE XREF: sub_7FF+1B9j
		push	af
		call	sub_C2
		inc	c
		pop	af
		djnz	loc_9B2
		pop	af
		pop	bc
; END OF FUNCTION CHUNK	FOR sub_7FF

; =============== S U B	R O U T	I N E =======================================


sub_9BC:				; CODE XREF: sub_869+Dj sub_944+2Bp ...
		push	bc
		ld	b, 4
		ld	a, 9Fh ; 'Ÿ'

loc_9C1:				; CODE XREF: sub_9BC+Aj
		ld	(7F11h), a
		zadd	a, 20h ; ' '
		djnz	loc_9C1
		pop	bc
		jp	sub_690
; End of function sub_9BC


; =============== S U B	R O U T	I N E =======================================


sub_9CC:				; CODE XREF: sub_11B:loc_121p
		ld	a, (1C24h)
		ld	hl, 1C13h
		zadd	a, (hl)
		ld	(hl), a
		ret	nc
		ld	hl, 1C4Bh
		ld	de, 30h	; '0'
		ld	b, 9

loc_9DD:				; CODE XREF: sub_9CC+13j
		inc	(hl)
		zadd	hl, de
		djnz	loc_9DD
		ret
; End of function sub_9CC


; =============== S U B	R O U T	I N E =======================================


sub_9E2:				; CODE XREF: sub_11B+41p
		ld	hl, 1C0Ah
		ld	de, 1C05h
		ldi
		ldi
		ldi
		xor	a
		dec	hl
		ld	(hl), a
		dec	hl
		ld	(hl), a
		dec	hl
		ld	(hl), a
		ret
; End of function sub_9E2


; =============== S U B	R O U T	I N E =======================================


sub_9F6:				; CODE XREF: sub_944+18p
					; sub_54D:loc_C7Fp

; FUNCTION CHUNK AT 0367 SIZE 00000006 BYTES

		call	sub_A06
		ld	a, 40h ; '@'
		ld	c, 7Fh ; ''
		call	sub_A0A
		ld	c, (ix+1)
		jp	loc_367
; End of function sub_9F6


; =============== S U B	R O U T	I N E =======================================


sub_A06:				; CODE XREF: sub_9F6p ROM:0D34p
		ld	a, 80h ; '€'
		ld	c, 0FFh
; End of function sub_A06


; =============== S U B	R O U T	I N E =======================================


sub_A0A:				; CODE XREF: sub_986+4j sub_9F6+7p
		ld	b, 4

loc_A0C:				; CODE XREF: sub_A0A+9j
		push	af
		call	sub_AF
		pop	af
		zadd	a, 4
		djnz	loc_A0C
		ret
; End of function sub_A0A

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_4FB

loc_A16:				; CODE XREF: sub_4FB+7j
		call	sub_944
		ld	a, 1
		ld	(1C3Fh), a
		pop	hl
		ret
; END OF FUNCTION CHUNK	FOR sub_4FB

; =============== S U B	R O U T	I N E =======================================


sub_A20:				; CODE XREF: sub_11B+6Dp
		xor	a
		ld	(1C16h), a
		ld	a, (1C2Ch)
		ld	(1C24h), a
		ld	a, (1C2Eh)
		ld	(1C08h), a
		ld	hl, (1C2Ah)
		ld	(1C37h), hl
		ld	a, (1C2Dh)
		ld	(1C3Eh), a
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	hl, 1DF0h
		ld	de, 1C40h
		ld	bc, 1B0h
		ldir
		ld	a, (1C40h)
		zor	84h ; '„'
		ld	(1C40h), a
		ld	ix, 1C70h
		ld	b, 8

loc_A69:				; CODE XREF: sub_A20+75j
		ld	a, (ix+0)
		zor	84h ; '„'
		ld	(ix+0),	a
		bit	7, (ix+1)

loc_A75:
		jp	nz, loc_A90
		res	2, (ix+0)
		ld	a, (ix+6)
		zadd	a, 40h ; '@'
		ld	(ix+6),	a
		ld	a, (ix+8)
		push	bc
		ld	b, a
		call	sub_483
		call	sub_4B9
		pop	bc

loc_A90:				; CODE XREF: sub_A20:loc_A75j
		ld	de, 30h	; '0'
		zadd	ix, de
		djnz	loc_A69
		ld	a, 40h ; '@'
		ld	(1C29h), a
		ld	a, 2
		ld	(1C0Fh), a
		ld	(1C0Eh), a
		ret
; End of function sub_A20

; ---------------------------------------------------------------------------
word_AA5:	dw 3FFh, 3FFh, 3FFh, 3FFh, 3FFh, 3FFh, 3FFh, 3FFh, 3FFh
		dw 3F7h, 3BEh, 388h, 356h, 326h, 2F9h, 2CEh, 2A5h, 280h
		dw 25Ch, 23Ah, 21Ah, 1FBh, 1DFh, 1C4h, 1ABh, 193h, 17Dh
		dw 167h, 153h, 140h, 12Eh, 11Dh, 10Dh, 0FEh, 0EFh, 0E2h
		dw 0D6h, 0C9h, 0BEh, 0B4h, 0A9h, 0A0h, 97h, 8Fh, 87h, 7Fh
		dw 78h,	71h, 6Bh, 65h, 5Fh, 5Ah, 55h, 50h, 4Bh,	47h, 43h
		dw 40h,	3Ch, 39h, 36h, 33h, 30h, 2Dh, 2Bh, 28h,	26h, 24h
		dw 22h,	20h, 1Fh, 1Dh, 1Bh, 1Ah, 18h, 17h, 16h,	15h, 13h
		dw 12h,	11h, 10h, 0, 0
word_B4D:	dw 284h, 2ABh, 2D3h, 2FEh, 32Dh, 35Ch, 38Fh, 3C5h, 3FFh
		dw 43Ch, 47Ch, 4C0h

MusicBanks:	dsb 33h, 0h	; Natsumi: Changed to bank to ROM bank 1

; =============== S U B	R O U T	I N E =======================================


sub_B98:				; CODE XREF: sub_11B+78p
		call	sub_33A
		ret	nz
		ld	e, (ix+3)
		ld	d, (ix+4)

loc_BA2:				; CODE XREF: sub_B98+52j
		ld	a, (de)
		inc	de
		cp	0E0h ; 'à'
		jp	nc, loc_BE3
		zor	a
		jp	m, loc_BB1
		dec	de
		ld	a, (ix+0Dh)

loc_BB1:				; CODE XREF: sub_B98+12j
		ld	(ix+0Dh), a
		cp	80h ; '€'
		jp	z, loc_BD3
		res	7, a
		push	de
		ex	af, af
		call	sub_35B
		call	loc_979
		ex	af, af
		ld	ix, 1C40h
		bit	2, (ix+0)
		jp	nz, loc_BD2
		ld	(1C30h), a

loc_BD2:				; CODE XREF: sub_B98+34j
		pop	de

loc_BD3:				; CODE XREF: sub_B98+1Ej
		ld	a, (de)
		inc	de
		zor	a
		jp	p, loc_308
		dec	de
		ld	a, (ix+0Ch)
		ld	(ix+0Bh), a
		jp	loc_30E
; ---------------------------------------------------------------------------

loc_BE3:				; CODE XREF: sub_B98+Ej
		ld	hl, loc_BE9
		jp	loc_BF0
; ---------------------------------------------------------------------------

loc_BE9:				; DATA XREF: sub_B98:loc_BE3o
		inc	de
		jp	loc_BA2
; ---------------------------------------------------------------------------

loc_BED:				; CODE XREF: sub_277+12j
		ld	hl, loc_BF9

loc_BF0:				; CODE XREF: sub_B98+4Ej
		push	hl
		zsub	0E0h ; 'à'
		ld	hl, off_BFD
		rst	sub_18
		ld	a, (de)
		jp	(hl)
; End of function sub_B98

; ---------------------------------------------------------------------------
loc_BF9:
		inc	de
		jp	loc_285
; ---------------------------------------------------------------------------
off_BFD:	dw loc_C51, loc_C77, loc_C7B, loc_C7F, loc_C85,	loc_CA1
					; DATA XREF: sub_B98+5Bo
		dw loc_CA3, loc_CDB, loc_CE1, loc_C65, loc_C4D,	loc_CEB
		dw loc_D01, loc_D1B, loc_D21, loc_D2E, loc_D6D,	loc_D7B
		dw loc_D87, loc_E39, loc_D83, loc_E58, loc_E61,	loc_E67
		dw loc_E7E, loc_E98, loc_EAB, loc_EB1, loc_EB8,	loc_EDA
		dw loc_EE8, loc_F2F
off_C3D:	dw loc_F36, loc_F3A, loc_F42, loc_F7D, loc_F8B,	loc_F9A
					; DATA XREF: ROM:loc_F2Fo
		dw loc_FB5, loc_FBE
; ---------------------------------------------------------------------------

loc_C4D:				; DATA XREF: ROM:off_BFDo
		ld	(1C30h), a
		ret
; ---------------------------------------------------------------------------

loc_C51:				; DATA XREF: ROM:off_BFDo
		ld	c, 3Fh ; '?'
		ld	a, (ix+0Ah)
		zand	c
		push	de
		ex	de, hl
		zor	(hl)
		ld	(ix+0Ah), a
		ld	c, a
		ld	a, 0B4h	; '´'
		call	sub_AF
		pop	de
		ret
; ---------------------------------------------------------------------------

loc_C65:				; DATA XREF: ROM:off_BFDo
		ld	hl, 1C27h
		ld	a, (hl)
		zadd	a, (ix+5)
		ld	(ix+5),	a
		cp	10h
		jp	z, loc_C75
		inc	(hl)

loc_C75:				; CODE XREF: ROM:0C71j
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_C77:				; DATA XREF: ROM:off_BFDo
		ld	(ix+10h), a
		ret
; ---------------------------------------------------------------------------

loc_C7B:				; DATA XREF: ROM:off_BFDo
		ld	(1C16h), a
		ret
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_54D

loc_C7F:				; CODE XREF: sub_54D+2j
					; DATA XREF: ROM:off_BFDo
		call	sub_9F6
		jp	loc_D87
; END OF FUNCTION CHUNK	FOR sub_54D
; ---------------------------------------------------------------------------

loc_C85:				; DATA XREF: ROM:off_BFDo
		bit	7, (ix+1)
		jr	z, loc_C98
		srl	a
		srl	a
		srl	a
		xor	0Fh
		zand	0Fh
		jp	loc_D17
; ---------------------------------------------------------------------------

loc_C98:				; CODE XREF: ROM:0C89j
		xor	7Fh ; ''
		zand	7Fh ; ''
		ld	(ix+6),	a
		jr	sub_CBA
; ---------------------------------------------------------------------------

loc_CA1:				; DATA XREF: ROM:off_BFDo
		inc	de
		ld	a, (de)

loc_CA3:				; DATA XREF: ROM:off_BFDo
		bit	7, (ix+1)
		ret	nz
		zadd	a, (ix+6)
		jp	p, loc_CB7
		jp	pe, loc_CB5
		xor	a
		jp	loc_CB7
; ---------------------------------------------------------------------------

loc_CB5:				; CODE XREF: ROM:0CAEj
		ld	a, 7Fh ; ''

loc_CB7:				; CODE XREF: ROM:0CABj	ROM:0CB2j
		ld	(ix+6),	a

; =============== S U B	R O U T	I N E =======================================


sub_CBA:				; CODE XREF: sub_4B9+1Ej sub_879+5Ap ...
		push	de
		ld	de, byte_4B1
		ld	l, (ix+1Ch)
		ld	h, (ix+1Dh)
		ld	b, 4

loc_CC6:				; CODE XREF: sub_CBA+1Dj
		ld	a, (hl)
		zor	a
		jp	p, loc_CCE
		zadd	a, (ix+6)

loc_CCE:				; CODE XREF: sub_CBA+Ej
		zand	7Fh ; ''
		ld	c, a
		ld	a, (de)
		call	sub_AF
		inc	de
		inc	hl
		djnz	loc_CC6
		pop	de
		ret
; End of function sub_CBA

; ---------------------------------------------------------------------------

loc_CDB:				; DATA XREF: ROM:off_BFDo
		zset	1, (ix+0)
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_CE1:				; DATA XREF: ROM:off_BFDo
		call	sub_330
		ld	(ix+1Eh), a
		ld	(ix+1Fh), a
		ret
; ---------------------------------------------------------------------------

loc_CEB:				; DATA XREF: ROM:off_BFDo
		inc	de
		zadd	a, 28h ; '('
		ld	c, a
		ld	b, 0
		push	ix
		pop	hl
		zadd	hl, bc
		ld	a, (hl)
		dec	a
		jp	z, loc_CFC
		inc	de
		ret
; ---------------------------------------------------------------------------

loc_CFC:				; CODE XREF: ROM:0CF7j
		xor	a
		ld	(hl), a
		jp	loc_E61
; ---------------------------------------------------------------------------

loc_D01:				; DATA XREF: ROM:off_BFDo
		bit	7, (ix+1)
		ret	z
		res	4, (ix+0)
		dec	(ix+17h)
		zadd	a, (ix+6)
		cp	0Fh
		jp	c, loc_D17
		ld	a, 0Fh

loc_D17:				; CODE XREF: ROM:0C95j	ROM:0D12j
		ld	(ix+6),	a
		ret
; ---------------------------------------------------------------------------

loc_D1B:				; DATA XREF: ROM:off_BFDo
		zsub	40h ; '@'
		ld	(ix+5),	a
		ret
; ---------------------------------------------------------------------------

loc_D21:				; DATA XREF: ROM:off_BFDo
		call	sub_D28
		call	sub_C2
		ret

; =============== S U B	R O U T	I N E =======================================


sub_D28:				; CODE XREF: ROM:loc_D21p
		ex	de, hl
		ld	a, (hl)
		inc	hl
		ld	c, (hl)
		ex	de, hl
		ret
; End of function sub_D28

; ---------------------------------------------------------------------------

loc_D2E:				; DATA XREF: ROM:off_BFDo
		bit	7, (ix+1)
		jr	nz, loc_D64
		call	sub_A06
		ld	a, (de)
		ld	(ix+8),	a
		zor	a
		jp	p, loc_D5A
		inc	de
		ld	a, (de)
		ld	(ix+0Fh), a

; =============== S U B	R O U T	I N E =======================================


sub_D44:				; CODE XREF: sub_54D+88Ap
		push	de
		ld	a, (ix+0Fh)
		zsub	81h ; ''
		ld	c, 4
		rst	sub_8
		rst	sub_18
		rst	loc_20
		ld	a, (ix+8)
		zand	7Fh ; ''
		ld	b, a
		call	loc_492
		jr	loc_D5F
; ---------------------------------------------------------------------------

loc_D5A:				; CODE XREF: ROM:0D3Cj
		push	de
		ld	b, a
		call	sub_483

loc_D5F:				; CODE XREF: sub_D44+14j
		call	sub_4B9
		pop	de
		ret
; End of function sub_D44

; ---------------------------------------------------------------------------

loc_D64:				; CODE XREF: ROM:0D32j
		zor	a
		jp	p, loc_E5D
		inc	de
		jp	loc_E5D
; ---------------------------------------------------------------------------
		ret
; ---------------------------------------------------------------------------

loc_D6D:				; DATA XREF: ROM:off_BFDo
		ld	(ix+20h), e
		ld	(ix+21h), d
		ld	(ix+7),	80h ; '€'
		inc	de
		inc	de
		inc	de
		ret
; ---------------------------------------------------------------------------

loc_D7B:				; DATA XREF: ROM:off_BFDo
		inc	de
		bit	7, (ix+1)
		jr	nz, loc_D83
		ld	a, (de)

loc_D83:				; CODE XREF: ROM:0D80j
					; DATA XREF: ROM:off_BFDo
		ld	(ix+7),	a
		ret
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_54D

loc_D87:				; CODE XREF: sub_54D+735j
					; DATA XREF: ROM:off_BFDo
		res	7, (ix+0)
		ld	a, 1Fh
		ld	(1C15h), a
		call	sub_35B
		ld	c, (ix+1)
		push	ix
		call	sub_78F
		ld	a, (1C19h)
		zor	a
		jp	z, loc_E22
		xor	a
		ld	(1C18h), a
		push	hl
		ld	hl, (1C37h)
		pop	ix
		res	2, (ix+0)
		bit	7, (ix+1)
		jr	nz, loc_E27
		bit	7, (ix+0)
		jr	z, loc_E22
		ld	a, 2
		cp	(ix+1)
		jr	nz, loc_DD0
		ld	a, 4Fh ; 'O'
		bit	0, (ix+0)
		jr	nz, loc_DCD
		zand	0Fh

loc_DCD:				; CODE XREF: sub_54D+87Cj
		call	sub_F11

loc_DD0:				; CODE XREF: sub_54D+874j
		ld	a, (ix+8)
		zor	a
		jp	p, loc_DDC
		call	sub_D44
		jr	loc_E1F
; ---------------------------------------------------------------------------

loc_DDC:				; CODE XREF: sub_54D+887j
		ld	b, a
		push	hl
		ld	hl, 6000h
		ld	a, (1C3Eh)
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		pop	hl
		call	loc_492
		call	sub_4B9
		ld	a, SoundBank
		ld	hl, 6000h
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		rra
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	a, (ix+18h)
		zor	a
		jp	p, loc_E22
		ld	e, (ix+19h)
		ld	d, (ix+1Ah)

loc_E1F:				; CODE XREF: sub_54D+88Dj
		call	sub_FA4

loc_E22:				; CODE XREF: sub_54D+852j sub_54D+86Dj ...
		pop	ix
		pop	hl
		pop	hl
		ret
; ---------------------------------------------------------------------------

loc_E27:				; CODE XREF: sub_54D+867j
		bit	0, (ix+0)
		jr	z, loc_E22
		ld	a, (ix+1Ah)
		zor	a
		jp	p, loc_E37
		ld	(7F11h), a

loc_E37:				; CODE XREF: sub_54D+8E4j
		jr	loc_E22
; END OF FUNCTION CHUNK	FOR sub_54D
; ---------------------------------------------------------------------------

loc_E39:				; DATA XREF: ROM:off_BFDo
		bit	2, (ix+1)
		ret	nz
		ld	a, 0DFh	; 'ß'
		ld	(7F11h), a
		ld	a, (de)
		ld	(ix+1Ah), a
		zset	0, (ix+0)
		zor	a
		jr	nz, loc_E54
		res	0, (ix+0)
		ld	a, 0FFh

loc_E54:				; CODE XREF: ROM:0E4Cj
		ld	(7F11h), a
		ret
; ---------------------------------------------------------------------------

loc_E58:				; DATA XREF: ROM:off_BFDo
		bit	7, (ix+1)
		ret	z

loc_E5D:				; CODE XREF: ROM:0D65j	ROM:0D69j
		ld	(ix+8),	a
		ret
; ---------------------------------------------------------------------------

loc_E61:				; CODE XREF: ROM:0CFEj	ROM:0E79j ...
		ex	de, hl
		ld	e, (hl)
		inc	hl
		ld	d, (hl)
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_E67:				; DATA XREF: ROM:off_BFDo
		inc	de
		zadd	a, 28h ; '('
		ld	c, a
		ld	b, 0
		push	ix
		pop	hl
		zadd	hl, bc
		ld	a, (hl)
		zor	a
		jr	nz, loc_E77
		ld	a, (de)
		ld	(hl), a

loc_E77:				; CODE XREF: ROM:0E73j
		inc	de
		dec	(hl)
		jp	nz, loc_E61
		inc	de
		ret
; ---------------------------------------------------------------------------

loc_E7E:				; DATA XREF: ROM:off_BFDo
		ld	c, a
		inc	de
		ld	a, (de)
		ld	b, a
		push	bc
		push	ix
		pop	hl
		dec	(ix+9)
		ld	c, (ix+9)
		dec	(ix+9)
		ld	b, 0
		zadd	hl, bc
		ld	(hl), d
		dec	hl
		ld	(hl), e
		pop	de
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_E98:				; DATA XREF: ROM:off_BFDo
		push	ix
		pop	hl
		ld	c, (ix+9)
		ld	b, 0
		zadd	hl, bc
		ld	e, (hl)
		inc	hl
		ld	d, (hl)
		inc	(ix+9)
		inc	(ix+9)
		ret
; ---------------------------------------------------------------------------

loc_EAB:				; DATA XREF: ROM:off_BFDo
		res	7, (ix+7)
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_EB1:				; DATA XREF: ROM:off_BFDo
		zadd	a, (ix+5)
		ld	(ix+5),	a
		ret
; ---------------------------------------------------------------------------

loc_EB8:				; DATA XREF: ROM:off_BFDo
		ld	a, (1C26h)
		cp	80h ; '€'
		jp	z, loc_EC9
		xor	a
		ld	(1C25h), a
		ld	(1C26h), a
		inc	de
		ret
; ---------------------------------------------------------------------------

loc_EC9:				; CODE XREF: ROM:0EBDj
		ld	a, (1C31h)
		dec	a
		ld	(1C31h), a
		jp	nz, loc_E61
		xor	a
		ld	(1C26h), a
		jp	loc_E61
; ---------------------------------------------------------------------------

loc_EDA:				; DATA XREF: ROM:off_BFDo
		cp	1
		jr	nz, loc_EE3
		zset	3, (ix+0)
		ret
; ---------------------------------------------------------------------------

loc_EE3:				; CODE XREF: ROM:0EDCj
		res	3, (ix+0)
		ret
; ---------------------------------------------------------------------------

loc_EE8:				; DATA XREF: ROM:off_BFDo
		ld	a, (ix+1)
		cp	2
		jr	nz, loc_F1B
		zset	0, (ix+0)
		ex	de, hl
		call	nullsub_1
		ld	b, 4

loc_EF9:				; CODE XREF: ROM:0F0Bj
		push	bc
		ld	a, (hl)
		inc	hl
		push	hl
		ld	hl, word_F1F
		zadd	a, a
		ld	c, a
		ld	b, 0
		zadd	hl, bc
		ldi
		ldi
		pop	hl
		pop	bc
		djnz	loc_EF9
		ex	de, hl
		dec	de
		ld	a, 4Fh ; 'O'

; =============== S U B	R O U T	I N E =======================================


sub_F11:				; CODE XREF: sub_54D:loc_DCDp
		ld	(1C12h), a
		ld	c, a
		ld	a, 27h ; '''
		call	sub_C2
		ret
; End of function sub_F11

; ---------------------------------------------------------------------------

loc_F1B:				; CODE XREF: ROM:0EEDj
		inc	de
		inc	de
		inc	de
		ret
; ---------------------------------------------------------------------------
word_F1F:	dw 0, 132h, 18Eh, 1E4h,	234h, 27Eh, 2C2h, 2F0h ; DATA XREF: ROM:0EFDo
; ---------------------------------------------------------------------------

loc_F2F:				; DATA XREF: ROM:off_BFDo
		ld	hl, off_C3D
		rst	sub_18
		inc	de
		ld	a, (de)
		jp	(hl)
; ---------------------------------------------------------------------------

loc_F36:				; DATA XREF: ROM:off_C3Do
		ld	(1C24h), a
		ret
; ---------------------------------------------------------------------------

loc_F3A:				; DATA XREF: ROM:off_C3Do
		push	ix
		call	sub_4FB
		pop	ix
		ret
; ---------------------------------------------------------------------------

loc_F42:				; DATA XREF: ROM:off_C3Do
		ld	(1C11h), a
		zor	a
		jr	z, loc_F65
		push	ix
		push	de
		ld	ix, 1C40h
		ld	b, 9
		ld	de, 30h	; '0'

loc_F54:				; CODE XREF: ROM:0F5Dj
		res	7, (ix+0)
		call	loc_361
		zadd	ix, de
		djnz	loc_F54
		pop	de
		pop	ix
		jp	sub_9BC
; ---------------------------------------------------------------------------

loc_F65:				; CODE XREF: ROM:0F46j
		push	ix
		push	de
		ld	ix, 1C40h
		ld	b, 9
		ld	de, 30h	; '0'

loc_F71:				; CODE XREF: ROM:0F77j
		zset	7, (ix+0)
		zadd	ix, de
		djnz	loc_F71
		pop	de
		pop	ix
		ret
; ---------------------------------------------------------------------------

loc_F7D:				; DATA XREF: ROM:off_C3Do
		ex	de, hl
		ld	e, (hl)
		inc	hl
		ld	d, (hl)
		inc	hl
		ld	c, (hl)
		ld	b, 0
		inc	hl
		ex	de, hl
		ldir
		dec	de
		ret
; ---------------------------------------------------------------------------

loc_F8B:				; DATA XREF: ROM:off_C3Do
		ld	b, 9
		ld	hl, 1C42h

loc_F90:				; CODE XREF: ROM:0F97j
		push	bc
		ld	bc, 30h	; '0'
		ld	(hl), a
		zadd	hl, bc
		pop	bc
		djnz	loc_F90
		ret
; ---------------------------------------------------------------------------

loc_F9A:				; DATA XREF: ROM:off_C3Do
		ld	(ix+18h), 80h ;	'€'
		ld	(ix+19h), e
		ld	(ix+1Ah), d

; =============== S U B	R O U T	I N E =======================================


sub_FA4:				; CODE XREF: sub_54D:loc_E1Fp
		ld	hl, byte_4B5
		ld	b, 4

loc_FA9:				; CODE XREF: sub_FA4+Dj
		ld	a, (de)
		inc	de
		ld	c, a
		ld	a, (hl)
		inc	hl
		call	sub_AF
		djnz	loc_FA9
		dec	de
		ret
; End of function sub_FA4

; ---------------------------------------------------------------------------

loc_FB5:				; DATA XREF: ROM:off_C3Do
		ld	(ix+18h), a
		inc	de
		ld	a, (de)
		ld	(ix+19h), a
		ret
; ---------------------------------------------------------------------------

loc_FBE:				; DATA XREF: ROM:off_C3Do
		xor	a
		ld	(1C27h), a
		dec	de
		ret
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_1E9

loc_FC4:				; CODE XREF: sub_1E9+4j
		call	sub_33A
		jr	nz, loc_FD6
		call	sub_277
		bit	4, (ix+0)
		ret	nz
		call	sub_39E
		jr	loc_FE2
; ---------------------------------------------------------------------------

loc_FD6:				; CODE XREF: sub_1E9+DDEj
		ld	a, (ix+1Eh)
		zor	a
		jr	z, loc_FE2
		dec	(ix+1Eh)
		jp	z, sub_106C

loc_FE2:				; CODE XREF: sub_1E9+DEBj sub_1E9+DF1j
		call	sub_46F
		call	sub_3C9
		bit	2, (ix+0)
		ret	nz
		ld	c, (ix+1)
		ld	a, l
		zand	0Fh
		zor	c
		ld	(7F11h), a
		ld	a, l
		zand	0F0h ; 'ð'
		zor	h
		rrca
		rrca
		rrca
		rrca
		ld	(7F11h), a
		ld	a, (ix+8)
		zor	a
		ld	c, 0
		jr	z, loc_1013
		dec	a
		ld	c, 0Ah
		rst	sub_8
		rst	sub_18
		call	sub_103A
		ld	c, a

loc_1013:				; CODE XREF: sub_1E9+E1Fj
		bit	4, (ix+0)
		ret	nz
		ld	a, (ix+6)
		zadd	a, c
		bit	4, a
		jr	z, loc_1022
		ld	a, 0Fh

loc_1022:				; CODE XREF: sub_1E9+E35j
		zor	(ix+1)
		zadd	a, 10h
		bit	0, (ix+0)
		jr	nz, loc_1031
		ld	(7F11h), a
		ret
; ---------------------------------------------------------------------------

loc_1031:				; CODE XREF: sub_1E9+E42j
		zadd	a, 20h ; ' '
		ld	(7F11h), a
		ret
; END OF FUNCTION CHUNK	FOR sub_1E9
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_103A

loc_1037:				; CODE XREF: sub_103A+1Bj sub_103A+26j
		ld	(ix+17h), a
; END OF FUNCTION CHUNK	FOR sub_103A

; =============== S U B	R O U T	I N E =======================================


sub_103A:				; CODE XREF: sub_36D+Bp sub_1E9+E26p

; FUNCTION CHUNK AT 1037 SIZE 00000003 BYTES

		push	hl
		ld	c, (ix+17h)
		ld	b, 0
		zadd	hl, bc
		ld	a, (hl)
		pop	hl
		bit	7, a
		jr	z, loc_1068
		cp	83h ; 'ƒ'
		jr	z, loc_1057
		cp	81h ; ''
		jr	z, loc_1062
		cp	80h ; '€'
		jr	z, loc_105F
		inc	bc
		ld	a, (bc)
		jr	loc_1037
; ---------------------------------------------------------------------------

loc_1057:				; CODE XREF: sub_103A+Fj
		zset	4, (ix+0)
		pop	hl
		jp	sub_106C
; ---------------------------------------------------------------------------

loc_105F:				; CODE XREF: sub_103A+17j
		xor	a
		jr	loc_1037
; ---------------------------------------------------------------------------

loc_1062:				; CODE XREF: sub_103A+13j
		pop	hl
		zset	4, (ix+0)
		ret
; ---------------------------------------------------------------------------

loc_1068:				; CODE XREF: sub_103A+Bj
		inc	(ix+17h)
		ret
; End of function sub_103A


; =============== S U B	R O U T	I N E =======================================


sub_106C:				; CODE XREF: sub_277+2Ap sub_1E9+DF6j	...
		zset	4, (ix+0)
		bit	2, (ix+0)
		ret	nz
; End of function sub_106C


; =============== S U B	R O U T	I N E =======================================


sub_1075:				; CODE XREF: sub_78F+Ep
		ld	a, 1Fh
		zadd	a, (ix+1)
		zor	a
		ret	p
		ld	(7F11h), a
		bit	0, (ix+0)
		ret	z
		ld	a, 0FFh
		ld	(7F11h), a
		ret
; End of function sub_1075

; ---------------------------------------------------------------------------

loc_108A:				; CODE XREF: ROM:00ACj	ROM:1113j ...
		di
		ld	a, 2Bh ; '+'
		ld	c, 0
		call	sub_C2

loc_1092:				; CODE XREF: ROM:109Ej	ROM:1105j
		ei
		ld	a, (1C3Fh)
		zor	a
		jp	nz, loc_1126
		ld	a, (1C30h)
		zor	a
		jr	z, loc_1092
		ld	a, 2Bh ; '+'
		ld	c, 80h ; '€'
		di
		call	sub_C2
		ei
		ld	iy, byte_1116
		ld	hl, 1C30h
		ld	a, (hl)
		dec	a
		zset	7, (hl)
		ld	hl, 8000h
		rst	sub_18
		ld	c, 80h ; '€'
		ld	a, (hl)
		ld	(loc_10CA+1), a
		ld	(loc_10E7+1), a
		inc	hl
		ld	e, (hl)
		inc	hl
		ld	d, (hl)
		inc	hl
		ld	a, (hl)
		inc	hl
		ld	h, (hl)
		ld	l, a

loc_10CA:				; CODE XREF: ROM:110Cj
					; DATA XREF: ROM:10BBw
		ld	b, 0Ah
		ei

loc_10CD:				; CODE XREF: ROM:loc_10CDj
		djnz	*
		di
		ld	a, 2Ah ; '*'
		ld	(4000h), a
		ld	a, (hl)
		rlca
		rlca
		rlca
		rlca
		zand	0Fh
		ld	(loc_10E0+2), a
		ld	a, c

loc_10E0:				; DATA XREF: ROM:10DCw
		zadd	a, (iy+0)
		ld	(4001h), a
		ld	c, a

loc_10E7:				; DATA XREF: ROM:10BEw
		ld	b, 0Ah
		ei

loc_10EA:				; CODE XREF: ROM:loc_10EAj
		djnz	*
		di
		ld	a, 2Ah ; '*'
		ld	(4000h), a
		ld	a, (hl)
		zand	0Fh
		ld	(loc_10F9+2), a
		ld	a, c

loc_10F9:				; DATA XREF: ROM:10F5w
		zadd	a, (iy+0)
		ld	(4001h), a
		ei
		ld	c, a
		ld	a, (1C30h)
		zor	a
		jp	p, loc_1092
		inc	hl
		dec	de
		ld	a, d
		zor	e
		jp	nz, loc_10CA
		xor	a
		ld	(1C30h), a
		jp	loc_108A
; ---------------------------------------------------------------------------
byte_1116:	db 0, 1, 2, 4, 8, 10h, 20h, 40h	; DATA XREF: ROM:10A9o
		db 80h,	0FFh, 0FEh, 0FCh, 0F8h,	0F0h, 0E0h, 0C0h
; ---------------------------------------------------------------------------

loc_1126:				; CODE XREF: ROM:1097j
		di
		xor	a
		ld	(1C3Fh), a
		ld	a, 2Bh ; '+'
		ld	(4000h), a
		znop
		ld	a, 80h ; '€'
		ld	(4001h), a
		ld	a, SegaPCMBank
		ld	b, 8

loc_113A:				; CODE XREF: ROM:113Ej
		ld	(6000h), a
		rrca
		djnz	loc_113A
		xor	a
		ld	(6000h), a
		ld	hl, SegaPCMPtr
		ld	de, 5E2Fh
		ld	a, 2Ah ; '*'
		ld	(4000h), a
		znop

loc_1150:				; CODE XREF: ROM:1165j
		ld	a, (hl)
		ld	(4001h), a
		ld	a, (1C0Ah)
		cp	0FEh ; 'þ'
		jr	z, loc_1167
		znop
		znop
		ld	b, 0Ch

loc_115F:				; CODE XREF: ROM:loc_115Fj
		djnz	*
		inc	hl
		dec	de
		ld	a, d
		zor	e
		jr	nz, loc_1150

loc_1167:				; CODE XREF: ROM:1159j
		jp	loc_108A
; ---------------------------------------------------------------------------
		db 0
		dsb 195h, 0AAh

off_1300:	dw MusicPointers, UniversalVoices, MusicPointers, SFXPointers, ModEnvPointers, VolEnvPointers
		dw 33h

; ---------------------------------------------------------------------------
		include "Envs.Z80"
; ---------------------------------------------------------------------------
; 1618 167E 17D8
	org 1618h
MusicAmount = 		51	; S&K had 51 music slots
SFXAmount = 		173	; S&K and S3 had 173 music slots
MusicPointers:
SFXPointers:
			dw 0
		org 17D8h
UniversalVoices:
	incbin "Universal Voices/Synth Bass 2.bin"
	incbin "Universal Voices/Trumpet 1.bin"
	incbin "Universal Voices/Slap Bass 2.bin"
	incbin "Universal Voices/Synth Bass 1.bin"
	incbin "Universal Voices/Bell Synth 1.bin"
	incbin "Universal Voices/Bell Synth 2.bin"
	incbin "Universal Voices/Synth Brass 1.bin"
	incbin "Universal Voices/Synth Bassoon.bin"
	incbin "Universal Voices/Bell Horn.bin"
	incbin "Universal Voices/Synth Bass 3.bin"
	incbin "Universal Voices/Synth Trumpet.bin"
	incbin "Universal Voices/Wood Block.bin"
	incbin "Universal Voices/Tubular Bell.bin"
	incbin "Universal Voices/Strike Bass.bin"
	incbin "Universal Voices/Elec Piano.bin"
	incbin "Universal Voices/Bright Piano.bin"
	incbin "Universal Voices/Church Bell.bin"
	incbin "Universal Voices/Synth Brass 2.bin"
	incbin "Universal Voices/Bell Piano.bin"
	incbin "Universal Voices/Wet Wood Bass.bin"
	incbin "Universal Voices/Silent Bass.bin"
	incbin "Universal Voices/Picked Bass.bin"
	incbin "Universal Voices/Xylophone.bin"
	incbin "Universal Voices/Sine Flute.bin"
	incbin "Universal Voices/Pipe Organ.bin"
	incbin "Universal Voices/Synth Brass 3.bin"
	incbin "Universal Voices/Harpsichord.bin"
	incbin "Universal Voices/Metallic Bass 1.bin"
	incbin "Universal Voices/Metallic Bass 2.bin"
	incbin "Universal Voices/Backdropped Metallic Bass.bin"
	incbin "Universal Voices/Sine Bell.bin"
	incbin "Universal Voices/Synth Metallic Small Bell.bin"
	incbin "Universal Voices/Synth lead.bin"
	incbin "Universal Voices/Rock Organ.bin"
	incbin "Universal Voices/Strike Slap Bass.bin"

	org 1C00h
	dsb 10h, 0h
	z80prog
		end
