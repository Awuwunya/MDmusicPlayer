; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2011 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: B3-432E-F558-21			    |
; |				Ilfak Guilfanov				    |
; +-------------------------------------------------------------------------+
; ===========================================================================
	include "../../code/LANG Z80.ASM"
	org 0
	z80prog 0
; ===========================================================================
		di
		di
		di
		ld	sp, 1FEAh
		ld	hl, 1FEAh
		ld	de, 1FEBh
		ld	bc, 15h
		ld	(hl), 0
		ldir
		ld	a, 2Ah ; '*'
		ex	af, af

loc_16:					; CODE XREF: ROM:001Aj	ROM:01F1j
		ld	a, (1FFEh)
		zor	a
		jr	z, loc_16
		ld	(1FFFh), a

loc_1F:					; CODE XREF: ROM:0023j
		ld	a, (4000h)
		zor	a
		jp	m, loc_1F
		ld	a, 2Bh ; '+'
		ld	(4000h), a
		ld	a, 80h ; '€'
		ld	(4001h), a
		xor	a
		ld	(1FFFh), a

loc_34:					; CODE XREF: ROM:00B9j	ROM:0149j ...
		xor	a
		ld	(1FFEh), a
		ld	ix, 1FF4h
		call	sub_1F4
		call	setbank1
		exx
		ld	ix, 1FEAh
		call	sub_1F4
		call	setbank2
		ld	hl, 6000h
		call	sub_260
		exx
		ld	h, 40h ; '@'
		ld	a, (1FF4h)
		zor	a
		jp	z, loc_167
		ld	a, (1FEAh)
		zor	a
		jp	z, loc_F4

loc_64:					; CODE XREF: ROM:00B6j	ROM:00CEj ...
		ld	a, e
		zor	d
		jr	z, loc_BC
		ld	a, (bc)
		ld	l, a
		dec	de
		inc	bc
		exx

loc_6D:					; DATA XREF: setbank2+6w
		ld	(hl), 0

loc_6F:					; DATA XREF: setbank2+Dw
		ld	(hl), 0

loc_71:					; DATA XREF: setbank2+14w
		ld	(hl), 0

loc_73:					; DATA XREF: setbank2+1Bw
		ld	(hl), 0

loc_75:					; DATA XREF: setbank2+22w
		ld	(hl), 0

loc_77:					; DATA XREF: setbank2+29w
		ld	(hl), 0

loc_79:					; DATA XREF: setbank2+30w
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	a, e
		zor	d
		jr	z, loc_D7
		ld	a, (bc)
		dec	de
		inc	bc

loc_86:					; DATA XREF: setbank1+6w
		ld	(hl), 0

loc_88:					; DATA XREF: setbank1+Dw
		ld	(hl), 0

loc_8A:					; DATA XREF: setbank1+14w
		ld	(hl), 0

loc_8C:					; DATA XREF: setbank1+1Bw
		ld	(hl), 0

loc_8E:					; DATA XREF: setbank1+22w
		ld	(hl), 0

loc_90:					; DATA XREF: setbank1+29w
		ld	(hl), 0

loc_92:					; DATA XREF: setbank1+30w
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		exx
		zadd	a, l
		rra
		ex	af, af
		ld	l, 0
		ld	(1FFFh), a

loc_A1:					; CODE XREF: ROM:00A3j
		bit	7, (hl)
		jr	nz, loc_A1
		ld	(hl), a
		ex	af, af
		inc	hl
		ld	(hl), a
		xor	a
		ld	(1FFFh), a
		ld	a, 3

loc_AF:					; CODE XREF: ROM:00B0j
		dec	a
		jr	nz, loc_AF
		ld	a, (1FFEh)
		zor	a
		jp	p, loc_64
		jp	loc_34
; ---------------------------------------------------------------------------

loc_BC:					; CODE XREF: ROM:0066j
		ld	ix, 1FF4h
		ld	a, (ix+8)
		zor	(ix+9)
		jr	z, loc_D1
		call	sub_22C
		call	setbank1
		jp	loc_64
; ---------------------------------------------------------------------------

loc_D1:					; CODE XREF: ROM:00C6j
		ld	(ix+0),	a
		jp	loc_167
; ---------------------------------------------------------------------------

loc_D7:					; CODE XREF: ROM:0081j
		ld	ix, 1FEAh
		ld	a, (ix+8)
		zor	(ix+9)
		jr	z, loc_ED
		call	sub_22C
		call	setbank2
		exx
		jp	loc_64
; ---------------------------------------------------------------------------

loc_ED:					; CODE XREF: ROM:00E1j
		ld	(ix+0),	a
		exx
		jp	loc_F4

loc_F4:					; CODE XREF: ROM:0061j	ROM:0146j ...
		ld	a, e
		zor	d
		jr	z, loc_14C
		ld	a, (bc)
		ld	l, a
		dec	de
		inc	bc
		exx
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		exx
		ld	a, (bc)
		exx
		ld	a, 80h ; '€'
		dec	bc
		inc	bc

loc_116:				; DATA XREF: setbank1+3w
		ld	(hl), 0

loc_118:				; DATA XREF: setbank1+Aw
		ld	(hl), 0

loc_11A:				; DATA XREF: setbank1+11w
		ld	(hl), 0

loc_11C:				; DATA XREF: setbank1+18w
		ld	(hl), 0

loc_11E:				; DATA XREF: setbank1+1Fw
		ld	(hl), 0

loc_120:				; DATA XREF: setbank1+26w
		ld	(hl), 0

loc_122:				; DATA XREF: setbank1+2Dw
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		exx
		zadd	a, l
		rra
		ex	af, af
		ld	l, 0
		ld	(1FFFh), a

loc_131:				; CODE XREF: ROM:0133j
		bit	7, (hl)
		jr	nz, loc_131
		ld	(hl), a
		ex	af, af
		inc	hl
		ld	(hl), a
		xor	a
		ld	(1FFFh), a
		ld	a, 3

loc_13F:				; CODE XREF: ROM:0140j
		dec	a
		jr	nz, loc_13F
		ld	a, (1FFEh)
		zor	a
		jp	p, loc_F4
		jp	loc_34
; ---------------------------------------------------------------------------

loc_14C:				; CODE XREF: ROM:00F6j
		ld	ix, 1FF4h
		ld	a, (ix+8)
		zor	(ix+9)
		jr	z, loc_161
		call	sub_22C
		call	setbank1
		jp	loc_F4
; ---------------------------------------------------------------------------

loc_161:				; CODE XREF: ROM:0156j
		ld	(ix+0),	a
		jp	loc_1D9
; ---------------------------------------------------------------------------

loc_167:				; CODE XREF: ROM:005Aj	ROM:00D4j ...
		exx
		ld	a, (bc)
		exx
		ld	a, 80h ; '€'
		ld	l, a
		dec	bc
		inc	bc
		exx

loc_170:				; DATA XREF: setbank2+3w
		ld	(hl), 0

loc_172:				; DATA XREF: setbank2+Aw
		ld	(hl), 0

loc_174:				; DATA XREF: setbank2+11w
		ld	(hl), 0

loc_176:				; DATA XREF: setbank2+18w
		ld	(hl), 0

loc_178:				; DATA XREF: setbank2+1Fw
		ld	(hl), 0

loc_17A:				; DATA XREF: setbank2+26w
		ld	(hl), 0

loc_17C:				; DATA XREF: setbank2+2Dw
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	a, e
		zor	d
		jr	z, loc_1BF
		ld	a, (bc)
		dec	de
		inc	bc
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		ld	(hl), 0
		exx
		zadd	a, l
		rra
		ex	af, af
		ld	l, 0
		ld	(1FFFh), a

loc_1A4:				; CODE XREF: ROM:01A6j
		bit	7, (hl)
		jr	nz, loc_1A4
		ld	(hl), a
		ex	af, af
		inc	hl
		ld	(hl), a
		xor	a
		ld	(1FFFh), a
		ld	a, 3

loc_1B2:				; CODE XREF: ROM:01B3j
		dec	a
		jr	nz, loc_1B2
		ld	a, (1FFEh)
		zor	a
		jp	p, loc_167
		jp	loc_34
; ---------------------------------------------------------------------------

loc_1BF:				; CODE XREF: ROM:0184j
		ld	ix, 1FEAh
		ld	a, (ix+8)
		zor	(ix+9)
		jr	z, loc_1D5
		call	sub_22C
		call	setbank2
		exx
		jp	loc_167
; ---------------------------------------------------------------------------

loc_1D5:				; CODE XREF: ROM:01C9j
		ld	(ix+0),	a
		exx

loc_1D9:				; CODE XREF: ROM:0164j
		ld	a, 80h ; '€'
		ld	(1FFFh), a

loc_1DE:				; CODE XREF: ROM:01E2j
		ld	a, (4000h)
		zor	a
		jp	m, loc_1DE
		ld	a, 2Bh ; '+'
		ld	(4000h), a
		xor	a
		ld	(4001h), a
		ld	(1FFFh), a
		jp	loc_16

; =============== S U B	R O U T	I N E =======================================


sub_1F4:				; CODE XREF: ROM:003Cp	ROM:0047p
		ld	a, (ix+1)
		zor	a
		ret	z
		zand	7Fh ; ''
		jp	nz, loc_20E
		ld	(ix+1),	a	; load $80???
		ld	d, (ix+5)
		ld	e, (ix+6)
		ld	b, (ix+3)
		ld	c, (ix+4)
		ret
; ---------------------------------------------------------------------------

loc_20E:				; CODE XREF: sub_1F4+7j
		dec	a
		ld	iy, Endloc
		zadd	a, a
		zadd	a, a
		zadd	a, a
		ld	c, a
		ld	b, 0
		zadd	iy, bc
		ld	e, (iy+2)
		ld	d, (iy+3)
		ld	c, (iy+0)
		ld	b, (iy+1)
		xor	a
		ld	(ix+1),	a
		ret
; End of function sub_1F4


; =============== S U B	R O U T	I N E =======================================


sub_22C:				; CODE XREF: ROM:00C8p	ROM:00E3p ...
		inc	(ix+2)
		ld	bc, 8000h
		ld	a, (ix+8)
		rla
		ld	a, (ix+7)
		rl	a
		jr	z, loc_251
		ld	a, (ix+8)
		zsub	80h ; '€'
		ld	(ix+8),	a
		ld	a, (ix+7)
		sbc	a, 0
		ld	(ix+7),	a
		ld	de, 8000h
		ret
; ---------------------------------------------------------------------------

loc_251:				; CODE XREF: sub_22C+Fj
		ld	d, (ix+8)
		ld	e, (ix+9)
		ld	(ix+8),	0
		ld	(ix+9),	0
		ret
; End of function sub_22C


; =============== S U B	R O U T	I N E =======================================


sub_260:				; CODE XREF: ROM:0050p
		ld	a, (1FF6h)
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		rrca
		ld	(hl), a
		xor	a
		ld	(hl), a
		ld	(hl), a
		ret
; End of function sub_260


; =============== S U B	R O U T	I N E =======================================


setbank1:				; CODE XREF: ROM:003Fp	ROM:00CBp ...
		ld	a, (1FF6h)
		ld	(loc_116+1), a
		ld	(loc_86+1), a
		rrca
		ld	(loc_118+1), a
		ld	(loc_88+1), a
		rrca
		ld	(loc_11A+1), a
		ld	(loc_8A+1), a
		rrca
		ld	(loc_11C+1), a
		ld	(loc_8C+1), a
		rrca
		ld	(loc_11E+1), a
		ld	(loc_8E+1), a
		rrca
		ld	(loc_120+1), a
		ld	(loc_90+1), a
		rrca
		ld	(loc_122+1), a
		ld	(loc_92+1), a
		ret
; End of function setbank1


; =============== S U B	R O U T	I N E =======================================


setbank2:				; CODE XREF: ROM:004Ap	ROM:00E6p ...
		ld	a, (1FECh)
		ld	(loc_170+1), a
		ld	(loc_6D+1), a
		rrca
		ld	(loc_172+1), a
		ld	(loc_6F+1), a
		rrca
		ld	(loc_174+1), a
		ld	(loc_71+1), a
		rrca
		ld	(loc_176+1), a
		ld	(loc_73+1), a
		rrca
		ld	(loc_178+1), a
		ld	(loc_75+1), a
		rrca
		ld	(loc_17A+1), a
		ld	(loc_77+1), a
		rrca
		ld	(loc_17C+1), a
		ld	(loc_79+1), a
		ret

Endloc:
	z80prog
		end
